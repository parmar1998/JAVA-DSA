package com.cn.trie;

public class Trie {
	
	private TrieNode root;
	public int count;
	public Trie() {
	root=new TrieNode('\0');
	}
	
	//ADD FUNCTION
	public void add(String word) {
		addhelper(root, word);
	}
	private void addhelper(TrieNode root,String word) {
		if(word.length()==0) {
			root.isTerminating=true;
			return;
		}
		int childIndex=word.charAt(0)-'a';
		TrieNode child =root.children[childIndex];
		if(child==null) {
			child=new TrieNode(word.charAt(0));
			root.children[childIndex]=child;
			root.childcount++;
		}
		addhelper(root,word.substring(1));
	}
	
	
	//SEARCH FUNCTION
	public boolean search(String word) {
		
	}
	private boolean searchHelper(TrieNode root,String word) {
	
		//lets check for last character
		if(word.length()==0) {
			return	root.isTerminating;
		}
	}
}
